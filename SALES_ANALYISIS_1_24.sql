----- CREATE TABLE ------------------------------------

CREATE TABLE SALES_ANALYSIS(
      transactions_id int primary key,	
	  sale_date	date,
	  sale_time	 time,
	  customer_id int,
	  gender varchar(15) ,
	  age int ,
	  category varchar(60) ,
	  quantiy int ,
	  price_per_unit float ,
	  cogs	float ,
	  total_sale float 
);
UPDATE TABLE SALES_ANALYSIS(
      transactions_id int primary key,	
	  sale_date	date,
	  sale_time	 time,
	  customer_id int,
	  gender varchar(15) ,
	  age int ,
	  category varchar(60) ,
	  quantity int ,
	  price_per_unit float ,
	  cogs	float ,
	  total_sale float 
);
----------- DATA EXPLORATION & CLEANING ------------------

------ 1 RECORD COUNT -------------

SELECT COUNT(*) FROM SALES_ANALYSIS


-----  2 FINDING NULLL VALUES --------------

SELECT COUNT(*) FROM SALES_ANALYSIS WHERE 
       transactions_id IS NULL OR
	   sale_date IS NULL OR
	   sale_time IS NULL OR
	  customer_id IS NULL OR
	  gender IS NULL OR
	  age IS NULL OR
	  category IS NULL OR
	  quantiy IS NULL OR
	  price_per_unit IS NULL OR
	  cogs IS NULL OR
	  total_sale IS NULL; 

----- 13 NULL VALUES AVILABLE -------
------3 DELETE NULL VALUES ---------

DELETE FROM SALES_ANALYSIS WHERE 
       transactions_id IS NULL OR
	   sale_date IS NULL OR
	   sale_time IS NULL OR
	  customer_id IS NULL OR
	  gender IS NULL OR
	  age IS NULL OR
	  category IS NULL OR
	  quantiy IS NULL OR
	  price_per_unit IS NULL OR
	  cogs IS NULL OR
	  total_sale IS NULL; 

-----4 COUNT THE DATA -------
SELECT COUNT(*) FROM SALES_ANALYSIS

------ 1987 VALUES --

----------5 ADDITION OF DAY_TIME COLUMN ---------

ALTER TABLE SALES_ANALYSIS ADD COLUMN Day_time varchar(40);
SELECT * ,
CASE 
    WHEN EXTRACT (HOUR FROM sale_time)<12 THEN 'MORNING'
	WHEN EXTRACT (HOUR FROM sale_time) BETWEEN 12 AND 4 THEN 'AFTERNOON'
	ELSE 'EVENING'
END AS DAY_TIME FROM SALES_ANALYSIS

UPDATE SALES_ANALYSIS SET DAY_TIME = (
CASE WHEN EXTRACT (HOUR FROM sale_time)<12 THEN 'MORNING'
	WHEN EXTRACT (HOUR FROM sale_time) BETWEEN 12 AND 4 THEN 'AFTERNOON'
	ELSE 'EVENING'
END   
);

SELECT * FROM SALES_ANALYSIS

----------6 ADDITION OF MONTH_NAME COLUMN ---------

ALTER TABLE SALES_ANALYSIS ADD COLUMN MONTH_NAME VARCHAR(20);
SELECT TO_CHAR (sale_date, 'MONTH') FROM SALES_ANALYSIS;

UPDATE SALES_ANALYSIS SET MONTH_NAME = TO_CHAR (sale_date, 'MONTH')

-------7 ADDITION OF DAY_NAME COLUMN ----------
ALTER TABLE SALES_ANALYSIS ADD COLUMN DAY_NAME VARCHAR(20);
SELECT TO_CHAR (sale_date, 'DAY') FROM SALES_ANALYSIS;

UPDATE SALES_ANALYSIS SET DAY_NAME = TO_CHAR (sale_date, 'DAY')


----------8 ADDITION OF YEAR_NAME COLUMN ---------

ALTER TABLE SALES_ANALYSIS ADD COLUMN YEAR_NAME VARCHAR(20);
SELECT TO_CHAR (sale_date, 'YYYY') FROM SALES_ANALYSIS;

UPDATE SALES_ANALYSIS SET YEAR_NAME = TO_CHAR (sale_date, 'YYYY')


--------9 HOW MANY UNIQUE CATEGORIES ---------

SELECT COUNT(DISTINCT(CATEGORY) )FROM SALES_ANALYSIS
SELECT DISTINCT(CATEGORY)FROM SALES_ANALYSIS

-------10 WHAT IS THE MOST SELLING PRODUCT CATEGORY -------
SELECT CATEGORY , SUM(TOTAL_SALE) FROM SALES_ANALYSIS GROUP BY CATEGORY 


-------11 WHAT IS THE MOST SELLING PRODUCT QUANTITY-------
SELECT CATEGORY ,SUM(QUANTIY) FROM SALES_ANALYSIS GROUP BY CATEGORY

SELECT * FROM SALES_ANALYSIS

--------12 WHAT IS TOTAL REVENUE BY MONTH ---------
SELECT MONTH_NAME,YEAR_NAME ,SUM(TOTAL_SALE)FROM SALES_ANALYSIS GROUP BY MONTH_NAME,YEAR_NAME ORDER BY MONTH_NAME,YEAR_NAME DESC;


--------13 WHAT IS TOTAL QUANTITY BY MONTH ---------
SELECT MONTH_NAME,YEAR_NAME , SUM(QUANTIY) FROM SALES_ANALYSIS 

-------14 WHAT MONTH HAD LARGEST COGS ---------
SELECT MONTH_NAME,YEAR_NAME ,SUM(COGS)FROM SALES_ANALYSIS GROUP BY MONTH_NAME,YEAR_NAME ORDER BY MONTH_NAME,YEAR_NAME DESC ;


-----15 WHAT IS THE MOST PRODUCT LINE BY GENDER ----------
SELECT GENDER,CATEGORY,SUM(TOTAL_SALE) FROM SALES_ANALYSIS GROUP BY GENDER,CATEGORY ORDER BY 3  DESC;
SELECT CATEGORY,GENDER,COUNT(GENDER) FROM SALES_ANALYSIS GROUP BY GENDER,CATEGORY ORDER BY 3 DESC  ;


-------16 WHAT IS THE GENDER OF MOST CUSTOMER ------------
SELECT GENDER ,COUNT(*) AS GENDER_TYPE FROM SALES_ANALYSIS GROUP BY GENDER

--------17 WHICH OF THE DAY OF WEEK HAS THE BEST SALES -----------

SELECT DAY_NAME,AVG(TOTAL_SALE) FROM SALES_ANALYSIS GROUP BY DAY_NAME ORDER BY 2 DESC;

--------18 WRITE A SQL QUERY TO RETRIEVE ALL COLUMNS FOR SALES MADE ON " 2022-11-05" ---------

SELECT * FROM SALES_ANALYSIS WHERE SALE_DATE = '2022-12-12'ORDER BY TOTAL_SALE DESC

--------19 WRITE A SQL QUERY TO RETRIEVE TOTAL SALES MADE ON " 2022-11-05" ---------

SELECT  SALE_DATE,CATEGORY,SUM(TOTAL_SALE) FROM SALES_ANALYSIS WHERE SALE_DATE='2022-12-12' GROUP BY SALE_DATE,CATEGORY

------20 WRITE A SQL QUERY TO CALCULATE THE TOTAL SALES FOR EACH CATEGORY -----------

SELECT CATEGORY,SUM(TOTAL_SALE),COUNT (*) FROM SALES_ANALYSIS GROUP BY CATEGORY ORDER BY 3 DESC

------- 21 WRITE A SQL QUERY TO FIND THE AVERAGE AGE OF CUSTOMERS WHO PURCHASED ITEMS FROM EACH CATEGORY -------

SELECT CATEGORY,ROUND(AVG(AGE),2 )FROM SALES_ANALYSIS GROUP BY CATEGORY

------- 22 WRITE A SQL QUERY TO FIND THE AVERAGE AGE OF CUSTOMERS WHO PURCHASED ITEMS FROM BEAUTY CATEGORY -------

SELECT ROUND(AVG(AGE),2) FROM SALES_ANALYSIS WHERE CATEGORY='Beauty'

-------23 WRITE A SQL QUERY TO FIND ALL TRANSECTIONS WHERE TOTAL_SALE IS GREATER THEN 1000 ---------
SELECT * FROM SALES_ANALYSIS WHERE TOTAL_SALE >1000
SELECT COUNT(*) FROM SALES_ANALYSIS WHERE TOTAL_SALE>1000

-----24 WRITE A SQL QUERY TO FIND THE TOTAL NO. OF TRANSECTIONS MADE BY EACH GENDER IN EACH CATEGORY------

SELECT GENDER,CATEGORY,COUNT(TRANSACTIONS_ID) FROM SALES_ANALYSIS GROUP BY 1,2 ORDER BY 3 DESC

SELECT * FROM SALES_ANALYSIS